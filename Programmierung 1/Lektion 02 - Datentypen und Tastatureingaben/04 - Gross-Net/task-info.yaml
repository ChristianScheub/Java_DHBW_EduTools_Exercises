type: edu
files:
  - name: src/BruttoNetto.java
    visible: true
    placeholders:
      - offset: 80
        length: 41
        placeholder_text: /* Implementieren Sie die Aufgabe hier */
        initial_state:
          length: 41
          offset: 80
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          double gross;           // Bruttopreis des Produkts
                  double taxrate = 19.0;  // Steuersatz in %
                  double tax;             // Steuer
                  double net;             // Nettopreis des Produkts
          
                  // read gross (Bruttopreis)
                  System.out.print("Geben Sie den Bruttopreis des Produkts in EUR ein: ");
                  gross = new java.util.Scanner(System.in).nextDouble();
          
                  // perform calculation as outlined within the task description
                  tax = gross * taxrate / (100 + taxrate);
                  net = gross - tax;
          
                  // output result
                  System.out.println("Bei einem Bruttopreis von " + gross + "EUR betraegt der Nettopreis bei " + taxrate + "% MwSt genau " + net + "EUR");
        selected: false
        status: Unchecked
    text: |-
      public class BruttoNetto {
          public static void main(String[] args) {
              /* Implementieren Sie die Aufgabe hier */
          }
      }
    learner_created: false
  - name: test/BruttoNettoTests.java
    visible: false
    text: |-
      import de.hans.wif.lectures.test.utils.ConsoleIOBaseTest;
      import de.hans.wif.lectures.test.utils.ReflectionHelper;
      import org.junit.FixMethodOrder;
      import org.junit.Test;
      import org.junit.runners.MethodSorters;
      
      import static org.junit.Assert.assertEquals;
      
      @FixMethodOrder(MethodSorters.NAME_ASCENDING)
      public class BruttoNettoTests extends ConsoleIOBaseTest {
          private final static String TEST_CASE_A = "20" + System.lineSeparator();
      
          private final static String TEST_CASE_B = "10" + System.lineSeparator();
      
          private final static String TEST_CASE_C = "-5" + System.lineSeparator();
      
          @Test
          public void testCaseA() {
              flush();
              simulateInput(TEST_CASE_A);
      
              ReflectionHelper.invokeMain("BruttoNetto");
      
              final String output = getLastConsoleOutput();
      
              assertEquals("Fehlerhafte Ausgabe gefunden!",
                      "Bei einem Bruttopreis von 20.0EUR betraegt der Nettopreis bei 19.0% MwSt genau 16.80672268907563EUR",
                      output);
          }
      
          @Test
          public void testCaseB() {
              flush();
              simulateInput(TEST_CASE_B);
      
              ReflectionHelper.invokeMain("BruttoNetto");
      
              final String output = getLastConsoleOutput();
      
              assertEquals("Fehlerhafte Ausgabe gefunden!",
                      "Bei einem Bruttopreis von 10.0EUR betraegt der Nettopreis bei 19.0% MwSt genau 8.403361344537815EUR",
                      output);
          }
      
          @Test
          public void testCaseC() {
              flush();
              simulateInput(TEST_CASE_C);
      
              ReflectionHelper.invokeMain("BruttoNetto");
      
              final String output = getLastConsoleOutput();
      
              assertEquals("Fehlerhafte Ausgabe gefunden!",
                      "Bei einem Bruttopreis von -5.0EUR betraegt der Nettopreis bei 19.0% MwSt genau -4.201680672268908EUR",
                      output);
          }
      
      }
    learner_created: false
status: Unchecked
record: -1
